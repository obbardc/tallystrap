#!/usr/bin/env bash
#
# This script will tally up all of your various fruits.
#
# It does not work or do anything interesting. Yet.
#
#
# https://www.youtube.com/watch?v=6Tou8-Cz8is




BUILDENV="`pwd`/tmp"
ROOTSIZE="1500"
IMAGE="$BUILDENV/out.img"
ROOTFS="$BUILDENV/rootfs"

# check root is running
if [ $EUID -ne 0 ]; then
    echo "you must run as root"
    exit 1
fi

# purge old build env
rm -rf $BUILDENV
mkdir -p $BUILDENV

# create blank image $ROOTSIZE blocks long
dd if=/dev/zero of=$IMAGE bs=1MiB count=$ROOTSIZE > /dev/null
echo "TALLYMAN: created blank image $IMAGE"

# setup loopback
DEVICE=`losetup --find --show $IMAGE`
echo "TALLYMAN: loopback mounted $DEVICE"

# create partition table
# (sunxi needs first 2kb free for bootloader to be installed)
# from 2048 to full card ext4
echo "TALLYMAN: partitioning"
fdisk out.img &> /dev/null << EOF
n
p
1
2048

w
EOF


# create device map
DEVICE_PART=`kpartx -av $IMAGE | sed -E 's/.*(loop[0-9])p.*/\1/g' | head -1`
sleep 1
DEVICE_PART="/dev/mapper/${DEVICE_PART}p0"

# format
mkfs.ext4 $DEVICE_PART > /dev/null

# mount
mkdir -p $ROOTFS
mount $DEVICE_PART $ROOTFS
cd $ROOTFS

# do evil things to the rootfs here



# stop the doing evil things to the rootfs here

# unmount
umount $DEVICE_PART

# remove the device maps
kpartx -d $IMAGE > /dev/null

# detach the loopback
losetup --detach $DEVICE_PART > /dev/null
echo "TALLYMAN: detatched loopback device"

# exit
echo "TALLYMAN: completed!"
exit 0